@using System.Net.Http
@inject IHttpClientFactory HttpClientFactory

<EditForm Model="@NewComment" OnSubmit="OnCreateNewComment">

    <div class="form-group">
        <label>Author</label>
        <InputText class="form-control" @bind-Value="NewComment.Author" />
    </div>

    <div class="form-group">
        <label>Comment</label>
        <InputTextArea class="form-control" @bind-Value="@NewComment.Value" />
    </div>

    <div class="float-right">
        <button class="btn btn-success" type="submit">Add</button>
    </div>

</EditForm>

@if (Comments == null)
{
    <span>Loading...</span>
}
else
{
    @foreach (var comment in Comments)
    {
        <div>
            <div>
                <span class="comment-author">@comment.Author</span>
                <span class="comment-createdate">@comment.CreatedOn.ToShortDateString()</span>
            </div>
            <div>@comment.Value</div>
        </div>

        <br />
    }
}

@code {
    private HttpClient _client;

    public List<Comment> Comments { get; set; }

    [Parameter]
    public int MovieId { get; set; }

    public Comment NewComment { get; set; } = new Comment();

    public async Task OnCreateNewComment()
    {
        NewComment.CreatedOn = DateTime.Now;
        NewComment.MovieId = MovieId;
        Comments.Add(NewComment);

        var result = await _client.PostAsync("/Comment/AddComment", 
            new StringContent(Newtonsoft.Json.JsonConvert.SerializeObject(NewComment), System.Text.Encoding.UTF8, "application/json"));

        NewComment = new Comment();
    }

    protected override async Task OnInitializedAsync()
    {
        _client = HttpClientFactory.CreateClient("Cinema Api");

        var response = await _client.GetAsync($"/Comment/GetComments?movieId={MovieId}");
        var content = await response.Content.ReadAsStringAsync();

        Comments = Newtonsoft.Json.JsonConvert.DeserializeObject<List<Comment>>(content);
    }
}
