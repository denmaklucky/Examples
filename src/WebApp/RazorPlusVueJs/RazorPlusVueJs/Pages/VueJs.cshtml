@page "{tasks?}"
@model RazorPlusVueJs.Pages.VueJs

@{
    ViewData["Title"] = "To-Do List based on Vue.js";
}

<div id="app">

    <ul class="nav justify-content-center">
        <li class="nav-item">
            <a href="#" class="nav-link" v-on:click="showAll">All</a>
        </li>
        <li class="nav-item">
            <a href="#" class="nav-link" v-on:click="showUncompleted">Uncompleted</a>
        </li>
    </ul>

    <div class="input-group">
        <input type="text" class="form-control" v-model="newTask" placeholder="Add a new task" aria-label="Add a new task" aria-describedby="add-button">
        <button class="btn btn-outline-secondary" type="button" id="add-button" v-on:click="addNewTask">Button</button>
    </div>

    <br/>


    <div class="align-content-center">
        <ul class="list-group">
            <li class="list-group-item" v-for="item in filteredTasks">
                <input type="checkbox" class="form-check-input" v-model="item.isDone"/>
                <span class="text-black">{{item.title}}</span>
                <span class="float-end">{{item.createdAt}}</span>
            </li>
        </ul>
    </div>

</div>

<script>
var app = new Vue({
el: "#app",
data:{
    tasks: [],
    isShowAll: true,
    newTask: ''
},
mounted: function(){
   axios.get('?handler=tasks').then(response => {
       this.tasks = response;
   });
},
computed:{
    filteredTasks: function (){
        if (this.isShowAll)
            return this.tasks;
        
        return this.tasks.filter(i => !i.isDone);
    }
},
methods:{
    showAll: function (){
        this.isShowAll = true;
    },
    showUncompleted: function (){
        this.isShowAll = false;
    },
    addNewTask: function (){
        if (this.newTask){
            axios.post('https://localhost:7164/home/addnewtask?newTask='+this.newTask);
            axios.get('?handler=tasks').then(response => {
                   this.tasks = response;
               });
        }        
    }
},
});
</script>